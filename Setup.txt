Install Prettier as an extension in VS:
	Prettier is an opinionated code formatter. It enforces a consistent style 
	by parsing your code and re-printing it with its own rules that take the 
	maximum line length into account, wrapping code when necessary.

Install Node for Live Server
In cmd: 
node -v
npm install live-server -g
live server

FORKIFY
To setup project :
// setup package.json file
npm init
// add to package.json
 "scripts": {
    "start": "parcel index.html",
    "build": "parcel build index.html"
  },
// run start script
npm run start 
// install dependencies
npm install

// install parcel as a dev dependency
// @next is used to install version 2 of parcel
npm install parcel@next -D
// install fractional 
npm install fractional
// install 
npm install core-js regenerator-runtime


DEPLOYMENT WITH NETLIFY

package.json // we changed the build and changed main to default
{
  "name": "forkify",
  "version": "1.0.0",
  "description": "",
  "default": "index.html",
  "scripts": {
    "start": "parcel index.html",
    "build": "parcel build index.html --dist-dir ./dist"
  },
  "author": "Jake Lambert",
  "license": "ISC",
  "devDependencies": {
    "parcel": "^2.0.0-beta.1",
    "sass": "^1.30.0"
  },
  "dependencies": {
    "fractional": "^1.0.0"
  }
}

// the final build will be located in the dist folder
npm run build

// free service to run static websites meaning just html, css & js but no database or server side 
www.netlify.com

// Setting up git and github
git init  
git config --global user.name JakeLambertWD
git config --global user.email jakelambert1@hotmail.co.uk

// git fundamentals
inside the .gitignore file
node_modules
dist
.parcel-cache

// check untracked (U) files
git status

// add (A) files to staging area
git add -A

// commit files to github repository w/ comment
git commit -m 'Initial commit'

// this will delete any new changed from the most recent commit
git reset --hard HEAD

BRANCH: Developers never work in the master branch, to implement a 
        new feature a new branch is created. Then if it all works you can merge together

// check branch
git branch

// create new branch
git branch new-feature

// change branch 
git checkout new-feature

// save to new branch
git add -A
git commit -m 'Added new feature'

// merge new branch with the master branch
git merge new-feature

// git cheat sheet
https://education.github.com/git-cheat-sheet-education.pdf

// create a new repository on the command line
git remote add origin https://github.com/JakeLambertWD/forkify.git
git push -u origin master

SETTING UP CONTINUOUS INTERGRATION WITH NETFLIFY
https://app.netlify.com/sites/forkify-jake/settings/deploys
link site to git
github
// select repository
// input these settings
Build command
  npm run build
Publish directory
  dist/

